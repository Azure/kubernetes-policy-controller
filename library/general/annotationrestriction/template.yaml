apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: requiredannotations
spec:
  crd:
    spec:
      names:
        kind: RequiredAnnotations
        listKind: RequiredAnnotationsList
        plural: requiredannotations
        singular: requiredannotations
      validation:
        # Schema for the `parameters` field in the constraint
        openAPIV3Schema:
          properties:
          #Name of the annotation you want to force the constraint on
            annotationKey:
              type: string
          #Value of annotation you want to enforce
            annotationValue:
              type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package requiredannotations

        violation[{"msg": msg, "details": {}}] {
          #Retrieve the reference to the annotation you are looking for,
          #compare it to the value you specified, denies if they do not match.
          not input.review.object.metadata.annotations[input.parameters.annotationKey] == input.parameters.annotationValue
          msg := sprintf("Create / update of <%v> blocked - Annotation key <%v> must have value '%v'.", [input.review.object.kind, input.parameters.annotationKey, input.parameters.annotationValue])
        }
        