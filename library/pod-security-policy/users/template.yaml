apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8spspallowedusers
spec:
  crd:
    spec:
      names:
        kind: K8sPSPAllowedUsers
        listKind: K8sPSPAllowedUsersList
        plural: k8spspallowedusers
        singular: k8spspallowedusers
      validation:
        openAPIV3Schema:
          properties:
            runAsUser:
              type: integer
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8spspallowedusers

        violation[{"msg": msg}] {
          rule := input.parameters.runAsUser.rule
          input_container := input.review.object.spec.containers[i]
          provided_user := input_container.securityContext.runAsUser

          not accept_users(rule, provided_user)
          msg := sprintf("Container %v at index %v is attempting to run as user %v, which is forbidden by constraint %v.", [input_container.name, i, provided_user, input.constraint.metadata.name])
        }

        accept_users("RunAsAny", provided_user) {true}

        accept_users("MustRunAsNonRoot", provided_user) = res {res := provided_user != 0}

        accept_users("MustRunAs", provided_user) = res  {
          ranges := input.parameters.runAsUser.ranges
          matching := {1 | provided_user >= ranges[j].min; provided_user <= ranges[j].max}
          res := count(matching) > 0
        }
